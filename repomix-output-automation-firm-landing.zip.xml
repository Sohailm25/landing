This file is a merged representation of the entire codebase, combined into a single document by Repomix. The content has been processed where security check has been disabled.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Security check has been disabled - content may contain sensitive information
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
project/
  .bolt/
    config.json
    prompt
  src/
    App.tsx
    index.css
    main.tsx
    vite-env.d.ts
  .gitignore
  eslint.config.js
  index.html
  package.json
  postcss.config.js
  tailwind.config.js
  tsconfig.app.json
  tsconfig.json
  tsconfig.node.json
  vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="project/.bolt/config.json">
{
  "template": "bolt-vite-react-ts"
}
</file>

<file path="project/.bolt/prompt">
For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.

By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.

Use icons from lucide-react for logos.

Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.
</file>

<file path="project/src/App.tsx">
import React, { useEffect, useState } from 'react';
import { 
  Clock, 
  CheckCircle2, 
  FileCheck, 
  Bell, 
  ArrowRight,
  Star,
  ChevronRight,
  MessageSquareMore,
  AlertCircle,
  Zap,
  Mail,
  Bell as BellIcon,
  Activity,
  Headphones,
  Plus
} from 'lucide-react';

function App() {
  const [scrollProgress, setScrollProgress] = useState(0);
  const [isSticky, setIsSticky] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      const winScroll = document.documentElement.scrollTop;
      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      setScrollProgress(scrolled);
      setIsSticky(window.scrollY > 100);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <div className="min-h-screen bg-dark text-gray-100 relative overflow-hidden">
      {/* Geometric Shapes */}
      <div className="geometric-shape w-[500px] h-[500px] left-[-100px] top-[20%]" />
      <div className="geometric-shape w-[300px] h-[300px] right-[-50px] top-[40%]" />
      <div className="geometric-shape w-[400px] h-[400px] left-[30%] bottom-[-100px]" />

      {/* Progress Bar */}
      <div 
        className="fixed top-0 left-0 h-1 bg-gradient-to-r from-blue-500 to-purple-500 z-50"
        style={{ width: `${scrollProgress}%` }}
      />

      {/* Sticky Navigation */}
      <nav className={`fixed w-full z-40 transition-all duration-500 ${
        isSticky ? 'bg-dark-100/80 backdrop-blur-lg shadow-lg py-2' : 'bg-transparent py-4'
      }`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center">
          <div className="w-[200px] h-[80px] bg-dark-200 rounded-lg flex items-center justify-center">
            <span className="text-gray-400">Your Logo</span>
          </div>
          <button className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-6 py-2 rounded-full font-semibold transition-all duration-300 flex items-center group">
            Book Audit Call 
            <ChevronRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
          </button>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="pt-32 pb-20 px-4 sm:px-6 lg:px-8 relative">
        <div className="max-w-7xl mx-auto text-center">
          <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold mb-6 gradient-text leading-tight">
            Stop Leaking Clients & Reclaim Your Firm's Time
          </h1>
          <p className="text-xl text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
            Tired of losing potential clients to faster firms and drowning in administrative work? 
            We implement targeted automations that plug the leaks and free up your team.
          </p>
          <div className="aspect-video w-full max-w-4xl mx-auto bg-dark-100 rounded-2xl mb-8 flex items-center justify-center border border-gray-800">
            <span className="text-gray-400">Your Loom Video Here</span>
          </div>
          <button className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-8 py-4 rounded-full text-lg font-semibold transition-all duration-300 transform hover:scale-105 animate-bounce shadow-lg hover:shadow-blue-500/25">
            Book Your Free Automation Audit
          </button>
        </div>
      </section>

      {/* Value Proposition Cards */}
      <section className="py-20 bg-dark-50 relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                icon: <Clock className="h-8 w-8 text-blue-400" />,
                title: "Instant Lead Response",
                description: "Engage prospects within 60 seconds, 24/7"
              },
              {
                icon: <CheckCircle2 className="h-8 w-8 text-purple-400" />,
                title: "Eliminate Data Entry",
                description: "Save hours per week and prevent costly errors"
              },
              {
                icon: <FileCheck className="h-8 w-8 text-blue-400" />,
                title: "Seamless Integration",
                description: "Works with your existing software stack"
              },
              {
                icon: <Bell className="h-8 w-8 text-purple-400" />,
                title: "Never Miss a Lead",
                description: "Every inquiry tracked and actioned"
              }
            ].map((card, index) => (
              <div key={index} className="card-hover rounded-xl p-6 border border-gray-800">
                <div className="mb-4">{card.icon}</div>
                <h3 className="text-xl font-semibold mb-2 text-white">{card.title}</h3>
                <p className="text-gray-400">{card.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Core Offering Section */}
      <section className="py-20 relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold mb-4 text-gradient">Core Offering: The Intake Accelerator</h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Industry data shows firms lose over 40% of potential clients due to delays, and manual data entry eats up hours of valuable time.
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-12 items-center mb-16">
            <div>
              <div className="card-hover rounded-xl p-8 border border-gray-800 mb-8">
                <h3 className="text-2xl font-bold mb-4 flex items-center text-red-400">
                  <AlertCircle className="h-6 w-6 mr-2" />
                  The Problem
                </h3>
                <p className="text-gray-300 leading-relaxed">
                  Slow lead response is costing you clients daily. Manual data entry eats up hours of valuable time, and inconsistent follow-up processes lead to missed opportunities.
                </p>
              </div>

              <div className="card-hover rounded-xl p-8 border border-gray-800">
                <h3 className="text-2xl font-bold mb-4 flex items-center text-green-400">
                  <Zap className="h-6 w-6 mr-2" />
                  Our Solution
                </h3>
                <p className="text-gray-300 leading-relaxed">
                  We install an automated system that instantly captures leads from your website/email, provides immediate confirmation to the prospect, enters their data flawlessly into your system (Clio, MyCase, PracticePanther, etc.), and alerts your team for rapid follow-up.
                </p>
              </div>
            </div>
            <div className="bg-dark-100 rounded-2xl p-8 border border-gray-800 flex items-center justify-center">
              <span className="text-gray-400">Customized Flow Chart</span>
            </div>
          </div>

          <div className="mb-16">
            <h3 className="text-2xl font-bold mb-8 text-center text-gradient">What's Included</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[
                {
                  icon: <FileCheck className="h-6 w-6" />,
                  title: "Custom Intake Workflow Build & Configuration",
                  description: "Tailored to your firm's specific process and requirements"
                },
                {
                  icon: <Mail className="h-6 w-6" />,
                  title: "Personalized Email/SMS Templates",
                  description: "Automated client communications that reflect your brand"
                },
                {
                  icon: <BellIcon className="h-6 w-6" />,
                  title: "Automated Team Notifications",
                  description: "Ensure your team is alerted instantly to new leads"
                },
                {
                  icon: <Activity className="h-6 w-6" />,
                  title: "Ongoing Monitoring & Maintenance",
                  description: "We ensure your system runs smoothly at all times"
                },
                {
                  icon: <Headphones className="h-6 w-6" />,
                  title: "Basic Monthly Support",
                  description: "1 hour included for regular assistance and optimization"
                },
                {
                  icon: <CheckCircle2 className="h-6 w-6" />,
                  title: "Integration with Your Core Systems",
                  description: "Works with Clio, MyCase, PracticePanther, and more"
                }
              ].map((item, index) => (
                <div key={index} className="card-hover rounded-xl p-6 border border-gray-800">
                  <div className="text-blue-400 mb-4">{item.icon}</div>
                  <h4 className="text-lg font-semibold mb-2">{item.title}</h4>
                  <p className="text-gray-400">{item.description}</p>
                </div>
              ))}
            </div>
          </div>

          <div className="text-center bg-dark-100 rounded-2xl p-8 border border-gray-800">
            <div className="flex justify-center items-center gap-8 flex-wrap">
              <div>
                <h4 className="text-gray-400 mb-2">One-Time Setup Fee</h4>
                <div className="text-4xl font-bold">$2,499</div>
              </div>
              <div className="text-3xl font-bold text-gray-400">+</div>
              <div>
                <h4 className="text-gray-400 mb-2">Monthly Retainer</h4>
                <div className="text-4xl font-bold">$499<span className="text-xl text-gray-400">/month</span></div>
                <p className="text-sm text-gray-400 mt-1">Peace of Mind & Continuous Operation</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Expansion Modules Section */}
      <section className="py-20 bg-dark-50 relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold mb-4 text-gradient">Automation Expansion Modules</h2>
            <p className="text-xl text-gray-300">
              Unlock further efficiency by automating other critical bottlenecks.
            </p>
            <p className="text-gray-400 mt-2">
              (Requires Intake Accelerator)
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-8">
            {[
              {
                tag: "Selected Upsell 1",
                title: "Automated Client Onboarding",
                problem: "Manually generating engagement letters and standard onboarding forms is time-consuming and prone to errors.",
                solution: "Automatically generate personalized engagement letters and key onboarding documents using client data from your system the moment they commit. Optional e-signature integration.",
                benefit: "Drastically reduce drafting time (saves hours per client), ensure consistency, and get clients formally onboarded faster.",
                price: "$999",
                monthly: "$250"
              },
              {
                tag: "Selected Upsell 2",
                title: "Proactive Case Milestone Updates",
                problem: "Clients feel ignored (\"lack of communication\" is the #1 complaint), leading to frustration and excessive \"checking in\" calls/emails that disrupt your team.",
                solution: "Automatically send pre-approved, templated email/SMS updates to clients at key case milestones (e.g., hearing scheduled, filing confirmed, next steps outlined).",
                benefit: "Dramatically improve client satisfaction, reduce non-billable communication overhead, and build trust through transparency.",
                price: "$499",
                monthly: "$150"
              }
            ].map((module, index) => (
              <div key={index} className="card-hover rounded-xl overflow-hidden border border-gray-800">
                <div className="bg-emerald-600 text-white py-2 px-4 text-center">
                  {module.tag}
                </div>
                <div className="p-8">
                  <h3 className="text-2xl font-bold mb-6">{module.title}</h3>
                  
                  <div className="space-y-6">
                    <div>
                      <h4 className="text-red-400 font-semibold mb-2">The Problem:</h4>
                      <p className="text-gray-300">{module.problem}</p>
                    </div>
                    
                    <div>
                      <h4 className="text-green-400 font-semibold mb-2">The Solution:</h4>
                      <p className="text-gray-300">{module.solution}</p>
                    </div>
                    
                    <div>
                      <h4 className="text-blue-400 font-semibold mb-2">The Benefit:</h4>
                      <p className="text-gray-300">{module.benefit}</p>
                    </div>
                  </div>

                  <div className="mt-8 flex items-center justify-between">
                    <div>
                      <h4 className="text-gray-400 text-sm mb-1">Add-on Investment:</h4>
                      <div className="text-2xl font-bold">
                        {module.price} <span className="text-gray-400 text-base">+ {module.monthly}/month</span>
                      </div>
                    </div>
                    <button className="bg-transparent border-2 border-emerald-500 text-emerald-500 hover:bg-emerald-500 hover:text-white px-4 py-2 rounded-lg transition-all duration-300">
                      Learn More
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Social Proof Section */}
      <section className="py-20 relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12 text-gradient">Trusted by Leading Law Firms</h2>
          
          {/* Testimonials */}
          <div className="grid md:grid-cols-3 gap-8 mb-16">
            {[1, 2, 3].map((_, index) => (
              <div key={index} className="card-hover rounded-xl p-6 border border-gray-800">
                <div className="flex text-yellow-400 mb-4">
                  {[...Array(5)].map((_, i) => (
                    <Star key={i} className="h-5 w-5 fill-current" />
                  ))}
                </div>
                <p className="text-gray-300 mb-4 leading-relaxed">
                  "The automation system has transformed our intake process. We're capturing more leads and our team is saving hours each week."
                </p>
                <div className="flex items-center">
                  <div className="w-12 h-12 bg-dark-200 rounded-full mr-4"></div>
                  <div>
                    <h4 className="font-semibold text-white">John Smith</h4>
                    <p className="text-sm text-gray-400">Managing Partner</p>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Client Logos */}
          <div className="flex justify-center space-x-12">
            {[1, 2, 3, 4, 5].map((_, index) => (
              <div key={index} className="w-32 h-12 bg-dark-100 rounded border border-gray-800"></div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-blue-900/50 to-purple-900/50 relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-4xl font-bold mb-8 text-white">Ready to stop losing clients and wasting time?</h2>
          <p className="text-xl mb-12 max-w-2xl mx-auto text-gray-300">
            Book a complimentary 15-minute Automation Audit call to see if this is right for your firm
          </p>
          <button className="bg-white text-dark hover:bg-gray-100 px-8 py-4 rounded-full text-lg font-semibold transition-all duration-300 transform hover:scale-105 flex items-center mx-auto group">
            Book Your Free Audit Call 
            <ArrowRight className="ml-2 h-5 w-5 transform group-hover:translate-x-1 transition-transform" />
          </button>
          
          <div className="mt-12 flex justify-center space-x-8">
            {[
              { icon: <CheckCircle2 className="h-6 w-6" />, text: "No obligation" },
              { icon: <Clock className="h-6 w-6" />, text: "15-minute call" },
              { icon: <MessageSquareMore className="h-6 w-6" />, text: "Custom roadmap" }
            ].map((item, index) => (
              <div key={index} className="flex items-center text-gray-300">
                {item.icon}
                <span className="ml-2">{item.text}</span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Floating CTA */}
      <button className="fixed bottom-8 right-8 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white p-4 rounded-full shadow-lg transition-all duration-300 transform hover:scale-110 z-50">
        <MessageSquareMore className="h-6 w-6" />
      </button>
    </div>
  );
}

export default App;
</file>

<file path="project/src/index.css">
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Inter', sans-serif;
  background-color: #121212;
}

.gradient-text {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400;
}

.parallax-bg {
  @apply fixed inset-0 z-0;
  background: radial-gradient(circle at 50% 50%, #1a1a1a 0%, #121212 100%);
  transform: translateZ(-1px) scale(2);
}

.geometric-shape {
  @apply absolute bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-full blur-3xl;
  animation: float 8s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(-20px) scale(1.05);
  }
}

.card-hover {
  @apply transition-all duration-300 hover:translate-y-[-4px] hover:shadow-2xl;
  background: linear-gradient(145deg, rgba(255,255,255,0.05) 0%, rgba(255,255,255,0.02) 100%);
}

.text-gradient {
  background: linear-gradient(to right, #60A5FA, #A78BFA);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
</file>

<file path="project/src/main.tsx">
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);
</file>

<file path="project/src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path="project/.gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="project/eslint.config.js">
import js from '@eslint/js';
import globals from 'globals';
import reactHooks from 'eslint-plugin-react-hooks';
import reactRefresh from 'eslint-plugin-react-refresh';
import tseslint from 'typescript-eslint';

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  }
);
</file>

<file path="project/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="project/package.json">
{
  "name": "vite-react-typescript-starter",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "lucide-react": "^0.344.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.18",
    "eslint": "^9.9.1",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.11",
    "globals": "^15.9.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.3.0",
    "vite": "^5.4.2"
  }
}
</file>

<file path="project/postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
</file>

<file path="project/tailwind.config.js">
/** @type {import('tailwindcss').Config} */
export default {
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  theme: {
    extend: {
      colors: {
        dark: {
          DEFAULT: '#121212',
          50: '#1a1a1a',
          100: '#242424',
          200: '#2d2d2d',
        }
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
      },
      animation: {
        'gradient': 'gradient 8s linear infinite',
      },
      keyframes: {
        gradient: {
          '0%, 100%': {
            'background-size': '200% 200%',
            'background-position': 'left center'
          },
          '50%': {
            'background-size': '200% 200%',
            'background-position': 'right center'
          },
        },
      },
    },
  },
  plugins: [],
};
</file>

<file path="project/tsconfig.app.json">
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"]
}
</file>

<file path="project/tsconfig.json">
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="project/tsconfig.node.json">
{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="project/vite.config.ts">
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  optimizeDeps: {
    exclude: ['lucide-react'],
  },
});
</file>

</files>
